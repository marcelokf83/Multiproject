<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.fujita</groupId>
    <artifactId>TestMultiProject</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>TestMultiProject</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <!-- Override some defaults from Spring Boot. -->
        <spring.cloud.build>Finchley.RELEASE</spring.cloud.build>

        <!-- Versions of other dependencies not in spring IO. -->
        <easymock.version>3.1</easymock.version>
        <hibernate.jmx.version>3.5.6-Final</hibernate.jmx.version>
        <jamon.version>2.81</jamon.version>

        <!-- JUnit 5 related properties -->
        <java.version>1.8</java.version>
        <junit.jupiter.version>5.2.0</junit.jupiter.version>
        <junit.vintage.version>5.2.0</junit.vintage.version>
        <junit.platform.version>1.2.0</junit.platform.version>

        <!-- Enable maven support for Servlet 3 - no web.xml -->
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Add JAXB that is dropped in JDK 9 -->
        <jaxb-api.version>2.3.0</jaxb-api.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
<!--             <dependency>
                <groupId>com.fujita</groupId>
                <artifactId>TestMultiProjectSubProject00</artifactId>
            </dependency>
            <dependency>
                <groupId>com.fujita</groupId>
                <artifactId>TestMultiProjectSubProject01</artifactId>
            </dependency> -->
            <dependency>
                <groupId>com.fujita</groupId>
                <artifactId>TestMultiProjectSubProject02</artifactId>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <!-- Need this for Spring Boot -->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- For Spring Cloud -->
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>http://repo.spring.io/milestone</url>
            <!-- <url>https://repo.spring.io/libs-snapshot</url> -->
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <!-- Ensure resources are exported correctly - conflict with Spring Boot -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- Set Java version -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Set Project Natures -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <wtpversion>2.0</wtpversion>
                    <sourceIncludes>
                        <sourceInclude>**/*.*</sourceInclude>
                    </sourceIncludes>
                    <!-- All of them are listed manually to solve a limitation of the
                        mvn eclipse plugin (https://issuetracker.springsource.com/browse/STS-2938).
                        This might cause some issues when migrating to the next version of Eclipse/STS)
                        also see spring-intro/pom.xml (projectnatures defined explicitely there
                        as well) -->
                    <projectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                        <projectnature>org.eclipse.jdt.core.javanature</projectnature>
                        <projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
                        <projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
                        <projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
                    </projectnatures>
                    <additionalBuildcommands>
                        <name>org.springframework.ide.eclipse.core.springbuilder</name>
                    </additionalBuildcommands>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Ensure resources are handled correctly -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <!-- Need this for Spring Boot Maven Plugin -->
        <pluginRepository>
            <id>spring-milestones2</id>
            <url>http://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>



    <modules>
        <module>TestMultiProjectSubProject00</module>
        <module>TestMultiProjectSubProject01</module>
        <module>TestMultiProjectSubProject02</module>
    </modules>


</project>
